@import 'grid.generator.scss';
@include gridGenerator();

@include padHalf();

.grid-align-right { justify-content: flex-end; }
.grid-align-center { justify-content: center; }
.grid-align-justify { justify-content: space-between; }
.grid-align-spaced { justify-content: space-around; }
.grid-align-top { items: flex-start; }
.grid-align-self-top { self: flex-start; }
.grid-align-bottom { items: flex-end; }
.grid-align-self-bottom { self: flex-end; }
.grid-align-middle { items: center; }
.grid-align-self-middle { self: center; }
.grid-align-stretch { items: stretch; }
.grid-align-self-stretch { self: stretch; }

@include gridFlex();

// Default settings for gridGenerator()
//     $gridColumns: 12,                    // number of grid columns 
//     $breakpoints: (0, 480px, 800px),     // array of breakpoints
//     $breakpointPrefixes: (s-,m-,l-),     // array of breakpoint prefixes
//     $breakpointType: 'px',               // breakpoint type px or em 
//     $spaceUnits: (8px,16px,32px)         // array padding and margin units


// Custom Settings:
// 
// For example, use a 18-column grid (and keep all the other defaults:
// @include gridGenerator(18);

// Change the breakpoints, or add in more. 
// Name the prefixes whatever you like xs-, xl-, etc. 
// If you prefer, set ems for your breakpoints.
// @include gridGenerator(
//     12,
//     (0, 20em, 30em, 60em, 80em),
//     (xs-,s-,m-,l-,xl-),
//     'em'
// );

// Set custom padding and margin utility classes to make 
// creating and modifying responsive layouts fast and easy.
// @include gridGenerator(
//     12,
//     (0, 480px, 800px),
//     (s-,m-,l-),
//     'px',
//     $spaceUnits: (.5em,1em,2em)
// );

// Or donâ€™t use any spacing helpers, if you prefer
// @include gridGenerator(
//     12,
//     (0, 480px, 800px),
//     (s-,m-,l-),
//     'px',
//     $spaceUnits: false
// );
